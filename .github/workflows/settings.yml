name: Settings

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ settings.gradle ]
  pull_request:
    branches: [ main ]
    paths: [ settings.gradle ]

jobs:
  generate:
    if: contains(vars.INCLUDE_SETTINGS_ACTORS, github.actor)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          sparse-checkout: settings.gradle

      - name: ‚öôÔ∏è Generate structure & Helm charts
        run: bash .shell/settings

      - name: üíæ Commit README & Compose
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          branch="auto/settings-$(date +%s)"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$branch"
          git add README.md docker-compose.yml
          git diff --cached --quiet && echo "No changes to commit" && exit 0
          git commit -m "chore(root): sync Gradle structure + Compose artifacts"
          git push origin "$branch"
          gh pr create \
            --title "chore(root): sync Gradle structure" \
            --body "This PR updates the repository structure in README.md and Compose artifacts for dev/test in docker-compose.yml based on settings.gradle" \
            --base main \
            --head "$branch" \
            || echo "PR already exists"

      - name: üì¶ Commit & Push to Deploy repo
        run: |
          set -euo pipefail
          echo "üöÄ Syncing deployment artifacts and updating workflow options..."
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts 2>/dev/null
          DEPLOY_DIR="${{ runner.temp }}/java-deployment"
          git clone --depth=1 git@github.com:wliamp/java-deployment.git "$DEPLOY_DIR"
          cd "$DEPLOY_DIR"
          FOLDERS=()
          for d in "$GITHUB_WORKSPACE/deploy"/*/; do
            [ -d "$d" ] || continue
            FOLDERS+=("$(basename "$d")")
          done
          for folder in "${FOLDERS[@]}"; do
            SRC="${GITHUB_WORKSPACE}/deploy/$folder"
            if [ -d "$SRC" ]; then
              echo "üì¶ Syncing $folder..."
              rm -rf "$folder"
              mkdir -p "$folder"
              cp -r "$SRC"/* "$folder"/ || echo "‚ö†Ô∏è No files found in $SRC"
            fi
          done
          WORKFLOW_FILE=".github/workflows/deploy.yml"
          if [ -f "$WORKFLOW_FILE" ]; then
            echo "üìù Updating workflow_dispatch mode options..."
            OLD_OPTIONS=$(yq e '.on.workflow_dispatch.inputs.mode.options[]' "$WORKFLOW_FILE" || true)
            ALL_OPTIONS=$(printf "%s\n%s\n" "${OLD_OPTIONS}" "${FOLDERS[@]}" | sort -u)
            yq e -i ".on.workflow_dispatch.inputs.mode.options = [\"$(echo "${ALL_OPTIONS[@]}" | sed 's/ /\",\"/g')\"]" "$WORKFLOW_FILE"
          else
            echo "‚ö†Ô∏è Workflow file not found, skipping mode options update"
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --cached --quiet || git commit -m "chore: sync deployment artifacts and update deploy mode options"
          git push origin main
          echo "‚úÖ Deploy repo updated successfully!"
          rm -rf "$DEPLOY_DIR"
