name: CD Delivery

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  define-matrix:
    if: >
      !contains(vars.EXCLUDE_DELIVERY_ACTORS, github.actor)
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - id: set
        run: |
          module_map='${{ vars.MODULE_IMAGE }}'
          versions='[]'
          tag="$(date +'%Y%m%d')-${GITHUB_SHA::7}"
          count=$(jq 'length' <<< "$module_map")
          for ((i=0; i<$count; i++)); do
            module=$(jq -r ".[$i].module" <<< "$module_map")
            image=$(jq -r ".[$i].image" <<< "$module_map")
            versions=$(jq -c --arg m "$module" --arg i "$image" --arg v "$tag" \
              '. + [{"module":$m,"image":$i,"version":$v}]' <<< "${versions:-[]}")
          done
          echo "matrix=$versions" >> $GITHUB_OUTPUT

  delivery:
    needs: define-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}
    name: Build & Push â†’ ${{ matrix.module }}
    steps:
      - uses: ./.github/actions/cd-delivery
        with:
          module: ${{ matrix.module }}
          image: ${{ matrix.image }}
          version: ${{ matrix.version }}
          docker_user: ${{ secrets.DOCKERHUB_USER }}
          docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
          docker_repo: ${{ vars.DOCKERHUB_REPO }}
          slack: ${{ secrets.SLACK_WEBHOOK_URL }}
          pat: ${{ secrets.PAT }}
