name: Overview

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  generate:
    if: >
      contains(vars.INCLUDE_OVERVIEW_ACTORS, github.actor)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Gradle Mermaid structure
        run: |
          settings_file=$(ls | grep -E "settings.gradle(\.kts)?$" || echo "")
          echo '```mermaid' > structure.tmp
          echo 'graph TD' >> structure.tmp
          root_name=$(grep -E "^rootProject.name" "$settings_file" | sed "s/.*['\"]\\(.*\\)['\"].*/\\1/")
          echo "  root($root_name)" >> structure.tmp
          grep -E '^include' "$settings_file" | sed 's/include//;s/[":,()]//g' | tr -s ' ' '\n' | while read module; do
            [ -z "$module" ] && continue
            IFS=':' read -r -a parts <<< "$module"
            for i in "${!parts[@]}"; do
              current="${parts[*]:0:$((i+1))}"
              current="${current// /:}"
              node_label=$(echo "$current" | tr ':' '_')
              if [ $i -eq 0 ]; then
                echo "  root --> ${node_label}" >> structure.tmp
              else
                parent_label=$(echo "${parts[*]:0:$i}" | tr ':' '_')
                echo "  ${parent_label} --> ${node_label}" >> structure.tmp
              fi
            done
          done
          echo '```' >> structure.tmp
          start="<!-- START_FOLDER_STRUCTURE -->"
          end="<!-- END_FOLDER_STRUCTURE -->"
          content=$(cat structure.tmp)
          if grep -q "$start" README.md && grep -q "$end" README.md; then
            awk -v s="$start" -v e="$end" -v r="$content" '
              $0~s {print; print r; skip=1; next}
              $0~e {skip=0}
              !skip
            ' README.md > README.tmp && mv README.tmp README.md
          else
            echo -e "\n$start\n$content\n$end" >> README.md
          fi

      - name: Create branch and PR
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          branch="auto/overview-$(date +%s)"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b $branch
          git add README.md
          git commit -m "docs(root): auto-update Gradle modules diagram" || exit 0
          git push origin $branch
          gh pr create \
            --title "docs(root): auto-update Gradle modules diagram" \
            --body "This PR updates the Mermaid diagram in README.md" \
            --base main \
            --head $branch \
            || echo "PR already exists"
