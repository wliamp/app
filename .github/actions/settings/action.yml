description: |
  - Detects and commits any updates to README and docker-compose files, then opens a Pull Request.
  - Mirrors the latest deployment artifacts into a dedicated deployment repository.
inputs:
  in_key:
    required: true
    description: "SSH Deploy Key granting write access in this repository."
  ex_key:
    required: true
    description: "SSH Deploy Key granting write access to the external deployment repository."
runs:
  using: composite
  steps:
    - run: |
        set -euo pipefail
        echo "🔍 Checking for README or docker-compose changes..."
        mkdir -p ~/.ssh
        echo "${{ inputs.in_key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts 2>/dev/null
        git config user.name "settings[bot]"
        git config user.email "settings[bot]@users.noreply.github.com"
        git add README.md docker-compose.yml
        if git diff --cached --quiet; then
          echo "✅ No README or compose changes detected."
          exit 0
        fi
        git commit -m "chore(root): sync Gradle structure"
        git push origin main
      id: compose
      continue-on-error: true
      shell: bash
    - run: |
        set -euo pipefail
        echo "🚀 Syncing deployment artifacts..."
        DEPLOY_DIR="${{ runner.temp }}/java-deployment"
        git clone --depth=1 git@github.com:wliamp/java-deployment.git "$DEPLOY_DIR"
        cd "$DEPLOY_DIR"
        FOLDERS=()
        for d in "$GITHUB_WORKSPACE/deploy"/*/; do
          [ -d "$d" ] || continue
          FOLDERS+=("$(basename "$d")")
        done
        for folder in "${FOLDERS[@]}"; do
          SRC="${GITHUB_WORKSPACE}/deploy/$folder"
          echo "📦 Syncing $folder..."
          rm -rf "$folder"
          mkdir -p "$folder"
          cp -r "$SRC"/* "$folder"/ || echo "⚠️ No files in $SRC"
        done
        mkdir -p ~/.ssh
        echo "${{ inputs.ex_key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts 2>/dev/null
        git config user.name "settings[bot]"
        git config user.email "settings[bot]@users.noreply.github.com"
        git add -A
        if git diff --cached --quiet; then
          echo "✅ No changes in deployment artifacts."
        else
          git commit -m "chore: sync deployment artifacts"
          git push origin main
        fi
      id: deploy
      continue-on-error: true
      shell: bash
    - run: |
        STATUS_COMPOSE="${{ steps.compose.outcome }}"
        STATUS_DEPLOY="${{ steps.deploy.outcome }}"
        OVERALL="success"
        if [ "$STATUS_COMPOSE" != "success" ] || [ "$STATUS_DEPLOY" != "success" ]; then
          OVERALL="failure"
        fi
        echo "🧾 Generating synchronization report..."
        {
          echo "🔧 Settings Report"
          echo "==============="
          echo "🧩 Compose Step: $STATUS_COMPOSE"
          echo "📦 Deploy Step: $STATUS_DEPLOY"
          echo "-------------------------------"
          echo "✅ Overall Result: $OVERALL"
          echo "📅 Run ID: $GITHUB_RUN_ID"
          echo "🔗 Repository: $GITHUB_REPOSITORY"
          echo "👤 Triggered by: $GITHUB_ACTOR"
          echo "🕒 Timestamp: $(date -u)"
        } > settings-report.txt
      if: ${{ always() }}
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: settings-report
        path: settings-report.txt
      if: ${{ always() }}
