name: "CI Dev"
description: |
  - Branch validation
  - Dependency caching
  - Static & Security analysis
  - Testing & Building
  - Artifact upload
  - Aggregate
  - Image pre-build & scan

inputs:
  module:
    description: "Module / Microservice in Spring Boot multi Gradle project"
    required: true

runs:
  using: composite
  steps:
    # ------------------------
    # Branch Validation
    # ------------------------
    - name: Validate
      shell: bash
      run: |
        BRANCH="${GITHUB_REF#refs/heads/}"
        if [[ ! "$BRANCH" =~ ^(main|release/.*|feature/.*|bugfix/.*)$ ]]; then
          echo "❌ Branch '$BRANCH' is NOT ALLOWED for CI (DEVELOP)."
          exit 1
        fi
        echo "✅ Branch validation passed for $BRANCH"

    # ------------------------
    # Checkout & Setup
    # ------------------------
    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'

    - uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # ------------------------
    # Static & Security Analysis
    # ------------------------
    - name: Check
      shell: bash
      run: ./gradlew :${{ inputs.module }}:check

    - name: Dependency Vulnerability Scan
      uses: anchore/scan-action@v4
      with:
        path: .
        fail-build: true
        severity-cutoff: high

    # ------------------------
    # Testing & Building
    # ------------------------
    - name: Test + Build + Coverage
      shell: bash
      env:
        SPRING_PROFILES_ACTIVE: test
      run: ./gradlew :${{ inputs.module }}:clean build jacocoTestReport

    # ------------------------
    # Artifact Upload
    # ------------------------
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.module }}-test-report
        path: ${{ inputs.module }}/build/reports/tests/test

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.module }}-coverage-report
        path: ${{ inputs.module }}/build/reports/jacoco/test/html

    # ------------------------
    # Aggregate Validation (e.g. no-changes, consistency)
    # ------------------------
    - name: Aggregate
      shell: bash
      run: |
        if git diff --quiet HEAD^ HEAD -- ':!**/README.md'; then
          echo "ℹ️ No significant changes detected."
        else
          echo "✅ Relevant changes detected, continuing."
        fi

    # ------------------------
    # Image Pre-Build & Scan
    # ------------------------
    - name: Pre-Build
      shell: bash
      run: |
        docker build \
          --target build \
          -t ci-${{ inputs.module }}:prebuild \
          -f ${{ inputs.module }}/Dockerfile \
          ${{ inputs.module }}

    - name: Scan
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: ci-${{ inputs.module }}:prebuild
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        exit-code: 1
